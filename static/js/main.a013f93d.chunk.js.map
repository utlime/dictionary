{"version":3,"sources":["AppState.ts","idb.ts","AppActions.ts","localStore.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionType","reducer","state","action","type","INIT","payload","SEARCH","Object","objectSpread","search","SEARCH_RESULT","searchResult","ITEM","item","LOADING","isLoading","initialState","getDB","openDb","upgradeDB","oldVersion","createObjectStore","keyPath","autoIncrement","transaction","objectStore","createIndex","addItem","_x","_x2","_addItem","apply","this","arguments","_callee","dbPromise","_ref","word","isKnown","description","db","store","id","regenerator_default","a","wrap","_context","prev","next","sent","add","complete","abrupt","stop","addItems","_x3","_x4","_addItems","_callee2","items","ids","_context2","Promise","all","map","put","updateItem","_x5","_x6","_updateItem","_callee3","_ref2","_context3","get","getItem","_x7","_x8","_getItem","_callee4","_ref3","_context4","getAllItems","_x9","_getAllItems","_callee5","_context5","getAll","getNextItem","_x10","_x11","_getNextItem","_callee6","_ref4","cursor","_context6","openCursor","IDBKeyRange","lowerBound","upperBound","value","getItems","_x12","_x13","_getItems","_callee7","_ref5","_id","searchByKey","_context7","index","bound","concat","length","parseInt","Number","isInteger","unshift","deleteItem","_x14","_x15","_deleteItem","_callee8","_ref6","_context8","delete","useAppActions","dispatch","_useState","useState","slicedToArray","useEffect","savedState","localStorage","JSON","parse","loadFromLocalStore","setItem","stringify","saveToLocalStore","addAction","useCallback","asyncToGenerator","mark","_ref$description","_ref$isKnown","loadAction","downloadAction","blob","File","saveAs","editAction","_ref7","nextAction","_ref9","_ref8","searchAction","_ref11","_ref10","selectAction","_ref13","_ref12","deleteAction","_ref15","_ref14","t0","undefined","Header","props","fileInput","useRef","handleFiles","current","files","file","reader","FileReader","onload","result","onLoad","readAsText","react_default","createElement","onSubmit","e","preventDefault","onAdd","ref","accept","className","onChange","InputGroup","Form","Control","size","placeholder","target","HTMLInputElement","onSearch","Append","Button","variant","DropdownButton","as","alignRight","title","Dropdown","Item","href","onClick","click","onDownload","SearchResult","Fragment","Card","key","Body","Title","Text","Link","stopPropagation","onSelect","ItemView","rows","HTMLTextAreaElement","Footer","ButtonGroup","onNext","eventKey","onDelete","App","_useAppState","_useReducer","useReducer","_useReducer2","useAppState","_useAppState2","_useAppActions","Container","Row","Col","md","style","display","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a013f93d.chunk.js","sourcesContent":["import { useReducer } from \"react\";\n\nexport interface Item {\n  id: string;\n  word: string;\n  description: string;\n  isKnown: boolean;\n}\n\nexport interface AppState {\n  isLoading: boolean;\n  search: string;\n  searchResult: Item[];\n  item?: Item;\n}\n\nexport enum ActionType {\n  INIT,\n  SEARCH,\n  SEARCH_RESULT,\n  ITEM,\n  LOADING\n}\n\nexport type Action =\n  | { type: ActionType.SEARCH; payload: { search: string } }\n  | { type: ActionType.SEARCH_RESULT; payload: { searchResult: Item[] } }\n  | { type: ActionType.ITEM; payload: { item?: Item } }\n  | { type: ActionType.LOADING; payload: { isLoading: boolean } }\n  | { type: ActionType.INIT; payload: { state: AppState } };\n\nfunction reducer(state: AppState, action: Action) {\n  switch (action.type) {\n    case ActionType.INIT: {\n      return action.payload.state;\n    }\n    case ActionType.SEARCH: {\n      return { ...state, search: action.payload.search };\n    }\n    case ActionType.SEARCH_RESULT: {\n      return { ...state, searchResult: action.payload.searchResult };\n    }\n    case ActionType.ITEM: {\n      return { ...state, item: action.payload.item };\n    }\n    case ActionType.LOADING: {\n      return { ...state, isLoading: action.payload.isLoading };\n    }\n  }\n\n  return state;\n}\n\nconst initialState: AppState = {\n  isLoading: false,\n  search: \"\",\n  searchResult: []\n};\n\nexport function useAppState(): [AppState, (action: Action) => void] {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return [state, dispatch];\n}\n","import { DB, openDb } from \"idb\";\nimport { Item } from \"./AppState\";\n\nexport function getDB(): Promise<DB> {\n  return openDb(\"app\", 2, upgradeDB => {\n    switch (upgradeDB.oldVersion) {\n      case 0:\n        upgradeDB.createObjectStore(\"dictionary\", {\n          keyPath: \"id\",\n          autoIncrement: true\n        });\n      case 1:\n        const store = upgradeDB.transaction.objectStore(\"dictionary\");\n        store.createIndex(\"word\", \"word\");\n    }\n  });\n}\n\nexport async function addItem(\n  dbPromise: Promise<DB>,\n  {\n    word,\n    isKnown,\n    description\n  }: { word: string; isKnown: boolean; description: string }\n): Promise<Item> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readwrite\");\n  const store = transaction.objectStore(\"dictionary\");\n\n  const id = (await store.add({ word, isKnown, description })) as string;\n\n  await transaction.complete;\n\n  const item: Item = { id, word, description, isKnown };\n\n  return item;\n}\n\nexport async function addItems(\n  dbPromise: Promise<DB>,\n  items: { id?: string; word: string; isKnown: boolean; description: string }[]\n): Promise<string[]> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readwrite\");\n  const store = transaction.objectStore(\"dictionary\");\n\n  const ids = (await Promise.all(\n    items.map(item => {\n      if (item.id) {\n        return store.put(item);\n      } else {\n        return store.add(item);\n      }\n    })\n  )) as string[];\n\n  await transaction.complete;\n\n  return ids;\n}\n\nexport async function updateItem(\n  dbPromise: Promise<DB>,\n  {\n    isKnown,\n    description,\n    id\n  }: { id: string; description?: string; isKnown?: boolean }\n): Promise<Item> {\n  const db = await dbPromise;\n  let transaction = db.transaction(\"dictionary\", \"readonly\");\n  let store = transaction.objectStore(\"dictionary\");\n  const item: Item = await store.get(id);\n  await transaction.complete;\n\n  if (typeof isKnown === \"boolean\") {\n    item.isKnown = isKnown;\n  }\n\n  if (typeof description === \"string\") {\n    item.description = description;\n  }\n\n  transaction = db.transaction(\"dictionary\", \"readwrite\");\n  store = transaction.objectStore(\"dictionary\");\n  await store.put(item);\n  await transaction.complete;\n\n  return item;\n}\n\nexport async function getItem(\n  dbPromise: Promise<DB>,\n  { id }: { id: string }\n): Promise<Item | null> {\n  const db = await dbPromise;\n  let transaction = db.transaction(\"dictionary\", \"readonly\");\n  let store = transaction.objectStore(\"dictionary\");\n  const item: Item = await store.get(id);\n  await transaction.complete;\n\n  return item;\n}\n\nexport async function getAllItems(dbPromise: Promise<DB>): Promise<Item[]> {\n  const db = await dbPromise;\n  let transaction = db.transaction(\"dictionary\", \"readonly\");\n  let store = transaction.objectStore(\"dictionary\");\n  const items: Item[] = await store.getAll();\n  await transaction.complete;\n\n  return items;\n}\n\nexport async function getNextItem(\n  dbPromise: Promise<DB>,\n  { id }: { id: string }\n): Promise<Item | null> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readonly\");\n  const store = transaction.objectStore(\"dictionary\");\n  let cursor = await store.openCursor(IDBKeyRange.lowerBound(id, true));\n  if (!cursor) {\n    cursor = await store.openCursor(IDBKeyRange.upperBound(id));\n  }\n\n  if (!cursor) {\n    return null;\n  }\n\n  const item: Item = cursor.value;\n\n  await transaction.complete;\n\n  return item;\n}\n\nexport async function getItems(\n  dbPromise: Promise<DB>,\n  { word }: { word: string }\n): Promise<Item[]> {\n  const db = await dbPromise;\n\n  const searchResult: Item[] = await db\n    .transaction(\"dictionary\", \"readonly\")\n    .objectStore(\"dictionary\")\n    .index(\"word\")\n    .getAll(IDBKeyRange.bound(word, `${word}zzz`), 25);\n\n  if (searchResult.length === 0) {\n    const id = parseInt(word, 10);\n    if (Number.isInteger(id)) {\n      const searchByKey = await db\n        .transaction(\"dictionary\", \"readonly\")\n        .objectStore(\"dictionary\")\n        .get(parseInt(word, 10));\n\n      if (searchByKey) {\n        searchResult.unshift(searchByKey);\n      }\n    }\n  }\n\n  return searchResult;\n}\n\nexport async function deleteItem(\n  dbPromise: Promise<DB>,\n  { id }: { id: string }\n): Promise<void> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readwrite\");\n  const store = transaction.objectStore(\"dictionary\");\n\n  await store.delete(id);\n  await transaction.complete;\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport { Action, ActionType, AppState } from \"./AppState\";\nimport {\n  addItem,\n  addItems,\n  deleteItem,\n  getDB,\n  getItem,\n  getItems,\n  getNextItem,\n  updateItem,\n  getAllItems\n} from \"./idb\";\nimport { loadFromLocalStore, saveToLocalStore } from \"./localStore\";\nimport { saveAs } from \"file-saver\";\n\nexport function useAppActions(\n  state: AppState,\n  dispatch: (action: Action) => void\n): {\n  searchAction: (item: { word: string }) => void;\n  addAction: (item: {\n    word: string;\n    description?: string;\n    isKnown?: boolean;\n  }) => void;\n  loadAction: (\n    items: {\n      word: string;\n      description?: string;\n      isKnown?: boolean;\n    }[]\n  ) => void;\n  editAction: (item: {\n    id: string;\n    isKnown?: boolean;\n    description?: string;\n  }) => void;\n  nextAction: (item: { id: string }) => void;\n  selectAction: (item: { id: string }) => void;\n  deleteAction: (item: { id: string }) => void;\n  downloadAction: () => void;\n} {\n  const [dbPromise] = useState(getDB);\n\n  useEffect(() => {\n    const savedState = loadFromLocalStore();\n    if (savedState != null) {\n      dispatch({\n        type: ActionType.INIT,\n        payload: { state: savedState }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    saveToLocalStore(state);\n  }, [state]);\n\n  const addAction = useCallback(\n    async ({ word, description = \"\", isKnown = false }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const item = await addItem(dbPromise, { word, isKnown, description });\n\n      dispatch({ type: ActionType.ITEM, payload: { item } });\n      dispatch({ type: ActionType.SEARCH, payload: { search: \"\" } });\n      dispatch({\n        type: ActionType.SEARCH_RESULT,\n        payload: { searchResult: [] }\n      });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const loadAction = useCallback(\n    async (\n      items: { word: string; description?: string; isKnown?: boolean }[]\n    ) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      await addItems(\n        dbPromise,\n        items.map(({ word, description, isKnown }) => ({\n          word,\n          description: description || \"\",\n          isKnown: isKnown != null ? isKnown : false\n        }))\n      );\n\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const downloadAction = useCallback(async () => {\n    dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n    const items = await getAllItems(dbPromise);\n    const blob = new File([JSON.stringify(items)], \"dictionary.json\", {\n      type: \"application/json\"\n    });\n\n    saveAs(blob, \"dictionary.json\");\n\n    dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n  }, [dbPromise]);\n\n  const editAction = useCallback(\n    async ({\n      isKnown,\n      description,\n      id\n    }: {\n      isKnown?: boolean;\n      description?: string;\n      id: string;\n    }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const item = await updateItem(dbPromise, { isKnown, description, id });\n\n      dispatch({ type: ActionType.ITEM, payload: { item } });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const nextAction = useCallback(\n    async ({ id }: { id: string }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const item = await getNextItem(dbPromise, { id });\n\n      if (item != null) {\n        dispatch({ type: ActionType.ITEM, payload: { item } });\n      }\n\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const searchAction = useCallback(\n    async ({ word }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n      dispatch({ type: ActionType.SEARCH, payload: { search: word } });\n      dispatch({ type: ActionType.ITEM, payload: {} });\n\n      const searchResult = await getItems(dbPromise, { word });\n\n      dispatch({ type: ActionType.SEARCH_RESULT, payload: { searchResult } });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const selectAction = useCallback(\n    async ({ id }: { id: string }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const item = await getItem(dbPromise, { id });\n\n      if (item != null) {\n        dispatch({ type: ActionType.ITEM, payload: { item } });\n      }\n\n      dispatch({ type: ActionType.SEARCH, payload: { search: \"\" } });\n      dispatch({\n        type: ActionType.SEARCH_RESULT,\n        payload: { searchResult: [] }\n      });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const deleteAction = useCallback(\n    async ({ id }: { id: string }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      await deleteItem(dbPromise, { id });\n      const item = (await getNextItem(dbPromise, { id })) || undefined;\n\n      dispatch({ type: ActionType.ITEM, payload: { item } });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  return {\n    searchAction,\n    addAction,\n    editAction,\n    nextAction,\n    selectAction,\n    deleteAction,\n    loadAction,\n    downloadAction\n  };\n}\n","import { AppState } from \"./AppState\";\n\nexport function saveToLocalStore(state: AppState) {\n  localStorage.setItem(\"appState\", JSON.stringify(state));\n}\n\nexport function loadFromLocalStore(): AppState | null {\n  const savedState = localStorage.getItem(\"appState\");\n  if (savedState != null) {\n    return JSON.parse(savedState);\n  }\n\n  return null;\n}\n","import React, { useCallback, useRef } from \"react\";\nimport {\n  Col,\n  Container,\n  Form,\n  InputGroup,\n  Row,\n  Button,\n  Card,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown\n} from \"react-bootstrap\";\nimport { useAppActions } from \"./AppActions\";\nimport { useAppState, Item } from \"./AppState\";\n\nfunction Header(props: {\n  word: string;\n  onAdd: (word: {\n    word: string;\n    description?: string;\n    isKnown?: boolean;\n  }) => void;\n  onLoad: (\n    words: {\n      word: string;\n      description?: string;\n      isKnown?: boolean;\n    }[]\n  ) => void;\n  onSearch: (word: { word: string }) => void;\n  onDownload: () => void;\n}) {\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  const handleFiles = useCallback(() => {\n    if (fileInput.current == null) {\n      return;\n    }\n\n    const files = fileInput.current.files;\n    if (files == null) {\n      return;\n    }\n\n    const file = files.item(0);\n    if (file == null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (typeof reader.result === \"string\") {\n        props.onLoad(JSON.parse(reader.result));\n      }\n    };\n\n    reader.readAsText(file);\n  }, [fileInput]);\n\n  const handleLoad = () => {\n    if (fileInput.current != null) {\n      fileInput.current.click();\n    }\n  };\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        if (props.word.length > 0) {\n          props.onAdd({ word: props.word });\n        }\n      }}\n    >\n      <input\n        ref={fileInput}\n        type=\"file\"\n        accept=\"application/json\"\n        className=\"d-none\"\n        onChange={handleFiles}\n      />\n      <InputGroup className=\"mt-3 mb-3\">\n        <Form.Control\n          value={props.word}\n          size=\"lg\"\n          placeholder=\"Search or add new word\"\n          // @ts-ignore\n          onChange={(e: Event) => {\n            if (e.target instanceof HTMLInputElement) {\n              props.onSearch({ word: e.target.value });\n            }\n          }}\n        />\n        <InputGroup.Append>\n          <Button size=\"lg\" type=\"submit\" variant=\"outline-secondary\">\n            add\n          </Button>\n        </InputGroup.Append>\n        <DropdownButton\n          as={InputGroup.Append}\n          variant=\"outline-secondary\"\n          alignRight\n          title=\"\"\n          size=\"lg\"\n          id=\"app-header-options\"\n        >\n          <Dropdown.Item href=\"#\" onClick={handleLoad}>\n            Upload words\n          </Dropdown.Item>\n          <Dropdown.Item href=\"#\" onClick={props.onDownload}>\n            Download words\n          </Dropdown.Item>\n        </DropdownButton>\n      </InputGroup>\n    </form>\n  );\n}\n\nfunction SearchResult(props: {\n  search: string;\n  searchResult: Item[];\n  onSelect: (item: { id: string }) => void;\n}) {\n  return (\n    <React.Fragment>\n      {props.searchResult.map(item => (\n        <Card\n          key={item.id}\n          className={`mt-3 mb-3 ${item.isKnown ? \"border-success\" : \"\"}`}\n        >\n          <Card.Header>Card #{item.id}</Card.Header>\n          <Card.Body>\n            <Card.Title>{item.word}</Card.Title>\n            {item.description !== \"\" ? (\n              <Card.Text>{item.description}</Card.Text>\n            ) : (\n              false\n            )}\n            <Card.Link\n              href=\"#\"\n              // @ts-ignore\n              onClick={(e: Event) => {\n                e.stopPropagation();\n                props.onSelect({ id: item.id });\n              }}\n            >\n              select\n            </Card.Link>\n          </Card.Body>\n        </Card>\n      ))}\n      {props.searchResult.length === 0 && props.search.length > 0\n        ? \"No results\"\n        : false}\n    </React.Fragment>\n  );\n}\n\nfunction ItemView(props: {\n  item: Item;\n  onChange: (item: {\n    id: string;\n    description?: string;\n    isKnown?: boolean;\n  }) => void;\n  onNext: (item: { id: string }) => void;\n  onDelete: (item: { id: string }) => void;\n}) {\n  return (\n    <Card className=\"mt-3 mb-3\">\n      <Card.Header>Card #{props.item.id}</Card.Header>\n      <Card.Body>\n        <Card.Title>{props.item.word}</Card.Title>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"2\"\n          size=\"lg\"\n          value={props.item.description}\n          // @ts-ignore\n          onChange={(e: Event) => {\n            const description =\n              e.target instanceof HTMLTextAreaElement\n                ? e.target.value\n                : props.item.description;\n            props.onChange({ id: props.item.id, description });\n          }}\n        />\n      </Card.Body>\n      <Card.Footer>\n        <ButtonGroup className=\"w-100\">\n          <Button\n            variant={props.item.isKnown ? \"success\" : \"primary\"}\n            size=\"lg\"\n            onClick={() => {\n              props.onChange({\n                id: props.item.id,\n                isKnown: !props.item.isKnown\n              });\n            }}\n          >\n            I know\n          </Button>\n          <Button\n            variant=\"secondary\"\n            size=\"lg\"\n            onClick={() => {\n              props.onNext({ id: props.item.id });\n            }}\n          >\n            Next\n          </Button>\n          <DropdownButton\n            alignRight\n            as={ButtonGroup}\n            title=\"\"\n            size=\"lg\"\n            variant=\"secondary\"\n            id=\"card-options\"\n          >\n            <Dropdown.Item\n              eventKey=\"1\"\n              onClick={() => {\n                props.onDelete({ id: props.item.id });\n              }}\n            >\n              delete\n            </Dropdown.Item>\n          </DropdownButton>\n        </ButtonGroup>\n      </Card.Footer>\n    </Card>\n  );\n}\n\nfunction App() {\n  const [state, dispatch] = useAppState();\n  const {\n    searchAction,\n    addAction,\n    selectAction,\n    editAction,\n    nextAction,\n    deleteAction,\n    loadAction,\n    downloadAction\n  } = useAppActions(state, dispatch);\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"7\">\n          <Header\n            word={state.search}\n            onSearch={searchAction}\n            onAdd={addAction}\n            onLoad={loadAction}\n            onDownload={downloadAction}\n          />\n          <SearchResult\n            searchResult={state.searchResult}\n            search={state.search}\n            onSelect={selectAction}\n          />\n          {state.item ? (\n            <ItemView\n              item={state.item}\n              onChange={editAction}\n              onNext={nextAction}\n              onDelete={deleteAction}\n            />\n          ) : (\n            false\n          )}\n          <span style={{ display: state.isLoading ? \"block\" : \"none\" }}>\n            loading ...\n          </span>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}