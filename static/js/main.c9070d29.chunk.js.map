{"version":3,"sources":["AppState.ts","idb.ts","AppActions.ts","localStore.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionType","reducer","state","action","type","INIT","payload","SEARCH","Object","objectSpread","search","SEARCH_RESULT","searchResult","ITEM","item","LOADING","isLoading","initialState","getDB","openDb","upgradeDB","oldVersion","createObjectStore","keyPath","autoIncrement","transaction","objectStore","createIndex","addItem","_x","_x2","_addItem","apply","this","arguments","_callee","dbPromise","_ref","word","isKnown","description","db","store","id","regenerator_default","a","wrap","_context","prev","next","sent","add","complete","abrupt","stop","updateItem","_x3","_x4","_updateItem","_callee2","_ref2","_context2","get","put","getItem","_x5","_x6","_getItem","_callee3","_ref3","_context3","getNextItem","_x7","_x8","_getNextItem","_callee4","_ref4","cursor","_context4","openCursor","IDBKeyRange","lowerBound","upperBound","value","getItems","_x9","_x10","_getItems","_callee5","_ref5","_context5","index","getAll","only","deleteItem","_x11","_x12","_deleteItem","_callee6","_ref6","_context6","delete","useAppActions","dispatch","_useState","useState","slicedToArray","useEffect","savedState","localStorage","JSON","parse","loadFromLocalStore","setItem","stringify","saveToLocalStore","addAction","useCallback","asyncToGenerator","mark","editAction","nextAction","searchAction","_ref8","_ref7","selectAction","_ref10","_ref9","deleteAction","_ref12","_ref11","t0","undefined","Header","props","react_default","createElement","onSubmit","e","preventDefault","onAdd","InputGroup","className","Form","Control","size","placeholder","onChange","target","HTMLInputElement","onSearch","Append","Button","variant","SearchResult","Fragment","map","Card","Body","Title","Text","Link","href","onClick","stopPropagation","onSelect","length","ItemView","as","rows","HTMLTextAreaElement","ButtonGroup","onNext","DropdownButton","alignRight","title","Dropdown","Item","eventKey","onDelete","App","_useAppState","_useReducer","useReducer","_useReducer2","useAppState","_useAppState2","_useAppActions","Container","Row","Col","md","style","display","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c9070d29.chunk.js","sourcesContent":["import { useReducer } from \"react\";\n\nexport interface Item {\n  id: string;\n  word: string;\n  description: string;\n  isKnown: boolean;\n}\n\nexport interface AppState {\n  isLoading: boolean;\n  search: string;\n  searchResult: Item[];\n  item?: Item;\n}\n\nexport enum ActionType {\n  INIT,\n  SEARCH,\n  SEARCH_RESULT,\n  ITEM,\n  LOADING\n}\n\nexport type Action =\n  | { type: ActionType.SEARCH; payload: { search: string } }\n  | { type: ActionType.SEARCH_RESULT; payload: { searchResult: Item[] } }\n  | { type: ActionType.ITEM; payload: { item?: Item } }\n  | { type: ActionType.LOADING; payload: { isLoading: boolean } }\n  | { type: ActionType.INIT; payload: { state: AppState } };\n\nfunction reducer(state: AppState, action: Action) {\n  switch (action.type) {\n    case ActionType.INIT: {\n      return action.payload.state;\n    }\n    case ActionType.SEARCH: {\n      return { ...state, search: action.payload.search };\n    }\n    case ActionType.SEARCH_RESULT: {\n      return { ...state, searchResult: action.payload.searchResult };\n    }\n    case ActionType.ITEM: {\n      return { ...state, item: action.payload.item };\n    }\n    case ActionType.LOADING: {\n      return { ...state, isLoading: action.payload.isLoading };\n    }\n  }\n\n  return state;\n}\n\nconst initialState: AppState = {\n  isLoading: false,\n  search: \"\",\n  searchResult: []\n};\n\nexport function useAppState(): [AppState, (action: Action) => void] {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return [state, dispatch];\n}\n","import { DB, openDb } from \"idb\";\nimport { Item } from \"./AppState\";\n\nexport function getDB(): Promise<DB> {\n  return openDb(\"app\", 2, upgradeDB => {\n    switch (upgradeDB.oldVersion) {\n      case 0:\n        upgradeDB.createObjectStore(\"dictionary\", {\n          keyPath: \"id\",\n          autoIncrement: true\n        });\n      case 1:\n        const store = upgradeDB.transaction.objectStore(\"dictionary\");\n        store.createIndex(\"word\", \"word\");\n    }\n  });\n}\n\nexport async function addItem(\n  dbPromise: Promise<DB>,\n  {\n    word,\n    isKnown,\n    description\n  }: { word: string; isKnown: boolean; description: string }\n): Promise<Item> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readwrite\");\n  const store = transaction.objectStore(\"dictionary\");\n\n  const id = (await store.add({ word, isKnown, description })) as string;\n\n  await transaction.complete;\n\n  const item: Item = { id, word, description, isKnown };\n\n  return item;\n}\n\nexport async function updateItem(\n  dbPromise: Promise<DB>,\n  {\n    isKnown,\n    description,\n    id\n  }: { id: string; description?: string; isKnown?: boolean }\n): Promise<Item> {\n  const db = await dbPromise;\n  let transaction = db.transaction(\"dictionary\", \"readonly\");\n  let store = transaction.objectStore(\"dictionary\");\n  const item: Item = await store.get(id);\n  await transaction.complete;\n\n  if (typeof isKnown === \"boolean\") {\n    item.isKnown = isKnown;\n  }\n\n  if (typeof description === \"string\") {\n    item.description = description;\n  }\n\n  transaction = db.transaction(\"dictionary\", \"readwrite\");\n  store = transaction.objectStore(\"dictionary\");\n  await store.put(item);\n  await transaction.complete;\n\n  return item;\n}\n\nexport async function getItem(\n  dbPromise: Promise<DB>,\n  { id }: { id: string }\n): Promise<Item | null> {\n  const db = await dbPromise;\n  let transaction = db.transaction(\"dictionary\", \"readonly\");\n  let store = transaction.objectStore(\"dictionary\");\n  const item: Item = await store.get(id);\n  await transaction.complete;\n\n  return item;\n}\n\nexport async function getNextItem(\n  dbPromise: Promise<DB>,\n  { id }: { id: string }\n): Promise<Item | null> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readonly\");\n  const store = transaction.objectStore(\"dictionary\");\n  let cursor = await store.openCursor(IDBKeyRange.lowerBound(id, true));\n  if (!cursor) {\n    cursor = await store.openCursor(IDBKeyRange.upperBound(id));\n  }\n\n  if (!cursor) {\n    return null;\n  }\n\n  const item: Item = cursor.value;\n\n  await transaction.complete;\n\n  return item;\n}\n\nexport async function getItems(\n  dbPromise: Promise<DB>,\n  { word }: { word: string }\n): Promise<Item[]> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readonly\");\n  const store = transaction.objectStore(\"dictionary\");\n  const searchResult: Item[] = await store\n    .index(\"word\")\n    .getAll(IDBKeyRange.only(word));\n\n  await transaction.complete;\n\n  return searchResult;\n}\n\nexport async function deleteItem(\n  dbPromise: Promise<DB>,\n  { id }: { id: string }\n): Promise<void> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readwrite\");\n  const store = transaction.objectStore(\"dictionary\");\n\n  await store.delete(id);\n  await transaction.complete;\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport { Action, ActionType, AppState } from \"./AppState\";\nimport {\n  addItem,\n  deleteItem,\n  getDB,\n  getItem,\n  getItems,\n  getNextItem,\n  updateItem\n} from \"./idb\";\nimport { loadFromLocalStore, saveToLocalStore } from \"./localStore\";\n\nexport function useAppActions(\n  state: AppState,\n  dispatch: (action: Action) => void\n): {\n  searchAction: (item: { word: string }) => void;\n  addAction: (item: { word: string }) => void;\n  editAction: (item: {\n    id: string;\n    isKnown?: boolean;\n    description?: string;\n  }) => void;\n  nextAction: (item: { id: string }) => void;\n  selectAction: (item: { id: string }) => void;\n  deleteAction: (item: { id: string }) => void;\n} {\n  const [dbPromise] = useState(getDB);\n\n  useEffect(() => {\n    const savedState = loadFromLocalStore();\n    if (savedState != null) {\n      dispatch({\n        type: ActionType.INIT,\n        payload: { state: savedState }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    saveToLocalStore(state);\n  }, [state]);\n\n  const addAction = useCallback(\n    async ({ word }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const isKnown = false;\n      const description = \"\";\n\n      const item = await addItem(dbPromise, { word, isKnown, description });\n\n      dispatch({ type: ActionType.ITEM, payload: { item } });\n      dispatch({ type: ActionType.SEARCH, payload: { search: \"\" } });\n      dispatch({\n        type: ActionType.SEARCH_RESULT,\n        payload: { searchResult: [] }\n      });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const editAction = useCallback(\n    async ({\n      isKnown,\n      description,\n      id\n    }: {\n      isKnown?: boolean;\n      description?: string;\n      id: string;\n    }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const item = await updateItem(dbPromise, { isKnown, description, id });\n\n      dispatch({ type: ActionType.ITEM, payload: { item } });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const nextAction = useCallback(\n    async ({ id }: { id: string }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const item = await getNextItem(dbPromise, { id });\n\n      if (item != null) {\n        dispatch({ type: ActionType.ITEM, payload: { item } });\n      }\n\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const searchAction = useCallback(\n    async ({ word }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n      dispatch({ type: ActionType.SEARCH, payload: { search: word } });\n      dispatch({ type: ActionType.ITEM, payload: {} });\n\n      const searchResult = await getItems(dbPromise, { word });\n\n      dispatch({ type: ActionType.SEARCH_RESULT, payload: { searchResult } });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const selectAction = useCallback(\n    async ({ id }: { id: string }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const item = await getItem(dbPromise, { id });\n\n      if (item != null) {\n        dispatch({ type: ActionType.ITEM, payload: { item } });\n      }\n\n      dispatch({ type: ActionType.SEARCH, payload: { search: \"\" } });\n      dispatch({\n        type: ActionType.SEARCH_RESULT,\n        payload: { searchResult: [] }\n      });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const deleteAction = useCallback(\n    async ({ id }: { id: string }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      await deleteItem(dbPromise, { id });\n      const item = (await getNextItem(dbPromise, { id })) || undefined;\n\n      dispatch({ type: ActionType.ITEM, payload: { item } });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  return {\n    searchAction,\n    addAction,\n    editAction,\n    nextAction,\n    selectAction,\n    deleteAction\n  };\n}\n","import { AppState } from \"./AppState\";\n\nexport function saveToLocalStore(state: AppState) {\n  localStorage.setItem(\"appState\", JSON.stringify(state));\n}\n\nexport function loadFromLocalStore(): AppState | null {\n  const savedState = localStorage.getItem(\"appState\");\n  if (savedState != null) {\n    return JSON.parse(savedState);\n  }\n\n  return null;\n}\n","import React from \"react\";\nimport {\n  Col,\n  Container,\n  Form,\n  InputGroup,\n  Row,\n  Button,\n  Card,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown\n} from \"react-bootstrap\";\nimport { useAppActions } from \"./AppActions\";\nimport { useAppState, Item } from \"./AppState\";\n\nfunction Header(props: {\n  word: string;\n  onAdd: (word: { word: string }) => void;\n  onSearch: (word: { word: string }) => void;\n}) {\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        props.onAdd({ word: props.word });\n      }}\n    >\n      <InputGroup className=\"mt-3 mb-3\">\n        <Form.Control\n          value={props.word}\n          size=\"lg\"\n          placeholder=\"Search or add new\"\n          // @ts-ignore\n          onChange={(e: Event) => {\n            if (e.target instanceof HTMLInputElement) {\n              props.onSearch({ word: e.target.value });\n            }\n          }}\n        />\n        <InputGroup.Append>\n          <Button size=\"lg\" type=\"submit\" variant=\"outline-secondary\">\n            add\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </form>\n  );\n}\n\nfunction SearchResult(props: {\n  search: string;\n  searchResult: Item[];\n  onSelect: (item: { id: string }) => void;\n}) {\n  return (\n    <React.Fragment>\n      {props.searchResult.map(item => (\n        <Card className=\"mt-3 mb-3\">\n          <Card.Body>\n            <Card.Title>{item.word}</Card.Title>\n            {item.description !== \"\" ? (\n              <Card.Text>{item.description}</Card.Text>\n            ) : (\n              false\n            )}\n            <Card.Link\n              href=\"#\"\n              // @ts-ignore\n              onClick={(e: Event) => {\n                e.stopPropagation();\n                props.onSelect({ id: item.id });\n              }}\n            >\n              select\n            </Card.Link>\n          </Card.Body>\n        </Card>\n      ))}\n      {props.searchResult.length === 0 && props.search.length > 0\n        ? \"No results\"\n        : false}\n    </React.Fragment>\n  );\n}\n\nfunction ItemView(props: {\n  item: Item;\n  onChange: (item: {\n    id: string;\n    description?: string;\n    isKnown?: boolean;\n  }) => void;\n  onNext: (item: { id: string }) => void;\n  onDelete: (item: { id: string }) => void;\n}) {\n  return (\n    <Card className=\"mt-3 mb-3\">\n      <Card.Body>\n        <Card.Title>{props.item.word}</Card.Title>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"2\"\n          size=\"lg\"\n          value={props.item.description}\n          // @ts-ignore\n          onChange={(e: Event) => {\n            const description =\n              e.target instanceof HTMLTextAreaElement\n                ? e.target.value\n                : props.item.description;\n            props.onChange({ id: props.item.id, description });\n          }}\n        />\n        <ButtonGroup className=\"mt-3 w-100\">\n          <Button\n            variant={props.item.isKnown ? \"success\" : \"primary\"}\n            size=\"lg\"\n            onClick={() => {\n              props.onChange({\n                id: props.item.id,\n                isKnown: !props.item.isKnown\n              });\n            }}\n          >\n            I know\n          </Button>\n          <Button\n            variant=\"secondary\"\n            size=\"lg\"\n            onClick={() => {\n              props.onNext({ id: props.item.id });\n            }}\n          >\n            Next\n          </Button>\n          <DropdownButton\n            alignRight\n            as={ButtonGroup}\n            title=\"\"\n            size=\"lg\"\n            variant=\"secondary\"\n            id=\"card-options\"\n          >\n            <Dropdown.Item\n              eventKey=\"1\"\n              onClick={() => {\n                props.onDelete({ id: props.item.id });\n              }}\n            >\n              delete\n            </Dropdown.Item>\n          </DropdownButton>\n        </ButtonGroup>\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction App() {\n  const [state, dispatch] = useAppState();\n  const {\n    searchAction,\n    addAction,\n    selectAction,\n    editAction,\n    nextAction,\n    deleteAction\n  } = useAppActions(state, dispatch);\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"7\">\n          <Header\n            word={state.search}\n            onSearch={searchAction}\n            onAdd={addAction}\n          />\n          <SearchResult\n            searchResult={state.searchResult}\n            search={state.search}\n            onSelect={selectAction}\n          />\n          {state.item ? (\n            <ItemView\n              item={state.item}\n              onChange={editAction}\n              onNext={nextAction}\n              onDelete={deleteAction}\n            />\n          ) : (\n            false\n          )}\n          <span style={{ display: state.isLoading ? \"block\" : \"none\" }}>\n            loading ...\n          </span>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}