{"version":3,"sources":["AppState.ts","idb.ts","localStore.ts","AppActions.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionType","reducer","state","action","type","INIT","Object","objectSpread","payload","STATISTIC","statistic","SEARCH","SEARCH_RESULT","ITEM","LOADING","initialState","isLoading","search","searchResult","total","getDB","openDb","upgradeDB","oldVersion","createObjectStore","keyPath","autoIncrement","transaction","objectStore","createIndex","addItem","_x","_x2","_addItem","apply","this","arguments","_callee","dbPromise","item","db","store","id","regenerator_default","a","wrap","_context","prev","next","sent","add","complete","abrupt","stop","addItems","_x3","_x4","_addItems","_callee2","items","ids","_context2","Promise","all","map","put","updateItem","_x5","_x6","_updateItem","_callee3","_ref","isKnown","description","word","_context3","get","getItem","_x7","_x8","_getItem","_callee4","_ref2","_context4","getAllItems","_x9","_getAllItems","_callee5","_context5","getAll","getNextItem","_x10","_x11","_getNextItem","_callee6","_ref3","cursor","_context6","openCursor","IDBKeyRange","lowerBound","upperBound","value","getItems","_x12","_x13","_getItems","_callee7","_ref4","searchByKey","_context7","push","t0","t1","t2","toConsumableArray","index","bound","concat","t3","t4","call","deleteItem","_x14","_x15","_deleteItem","_callee8","_ref5","_context8","delete","getTotal","_x16","_getTotal","_callee9","_context9","count","KEY","useAppActions","dispatch","_useState","useState","slicedToArray","useEffect","savedState","localStorage","JSON","parse","loadFromLocalStore","setItem","stringify","saveToLocalStore","addAction","useCallback","asyncToGenerator","mark","_ref$description","_ref$isKnown","uploadAction","downloadAction","blob","File","saveAs","editAction","_ref7","_ref6","nextAction","_ref9","_ref8","searchAction","_ref11","_ref10","tmpId","Number","parseInt","slice","isNaN","selectAction","_ref13","_ref12","deleteAction","_ref15","_ref14","undefined","Header","props","fileInput","useRef","handleFiles","current","files","file","reader","FileReader","onload","result","onLoad","readAsText","react_default","createElement","onSubmit","e","preventDefault","length","onAdd","ref","accept","className","onChange","InputGroup","Form","Control","size","placeholder","target","HTMLInputElement","onSearch","Append","Button","variant","DropdownButton","as","alignRight","title","Dropdown","Item","href","onClick","click","onDownload","SearchResult","Fragment","Card","key","Body","Title","Text","Link","stopPropagation","onSelect","ItemView","rows","HTMLTextAreaElement","Footer","ButtonGroup","onNext","eventKey","onDelete","Statistic","App","_useAppState","_useReducer","useReducer","_useReducer2","useAppState","_useAppState2","_useAppActions","Container","style","display","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","onLine","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ffdccdec.chunk.js","sourcesContent":["import { useReducer } from \"react\";\n\nexport interface AppStatistic {\n  total: number;\n}\n\nexport interface Item {\n  id: number;\n  word: string;\n  description: string;\n  isKnown: boolean;\n}\n\nexport interface AppState {\n  isLoading: boolean;\n  search: string;\n  searchResult: Item[];\n  item?: Item;\n  statistic: AppStatistic;\n}\n\nexport enum ActionType {\n  INIT,\n  SEARCH,\n  SEARCH_RESULT,\n  ITEM,\n  LOADING,\n  STATISTIC,\n}\n\ntype Action =\n  | { type: ActionType.STATISTIC; payload: Partial<AppStatistic> }\n  | { type: ActionType.SEARCH; payload: Pick<AppState, \"search\"> }\n  | { type: ActionType.SEARCH_RESULT; payload: Pick<AppState, \"searchResult\"> }\n  | { type: ActionType.ITEM; payload: Pick<AppState, \"item\"> }\n  | { type: ActionType.LOADING; payload: Pick<AppState, \"isLoading\"> }\n  | { type: ActionType.INIT; payload: { state: AppState } };\n\nfunction reducer(state: AppState, action: Action) {\n  switch (action.type) {\n    case ActionType.INIT: {\n      return { ...state, ...action.payload.state };\n    }\n    case ActionType.STATISTIC: {\n      return {\n        ...state,\n        statistic: { ...state.statistic, ...action.payload },\n      };\n    }\n    case ActionType.SEARCH:\n    case ActionType.SEARCH_RESULT:\n    case ActionType.ITEM:\n    case ActionType.LOADING: {\n      return { ...state, ...action.payload };\n    }\n  }\n\n  return state;\n}\n\nconst initialState: AppState = {\n  isLoading: false,\n  search: \"\",\n  searchResult: [],\n  statistic: { total: 0 },\n};\n\nexport type AppAction = (action: Action) => void;\n\nexport function useAppState(): [AppState, AppAction] {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return [state, dispatch];\n}\n","import { DB, openDb } from \"idb\";\nimport { Item } from \"./AppState\";\n\nexport function getDB(): Promise<DB> {\n  return openDb(\"app\", 2, upgradeDB => {\n    switch (upgradeDB.oldVersion) {\n      case 0:\n        upgradeDB.createObjectStore(\"dictionary\", {\n          keyPath: \"id\",\n          autoIncrement: true,\n        });\n      case 1:\n        const store = upgradeDB.transaction.objectStore(\"dictionary\");\n        store.createIndex(\"word\", \"word\");\n    }\n  });\n}\n\nexport async function addItem(\n  dbPromise: Promise<DB>,\n  item: Pick<Item, \"word\" | \"description\" | \"isKnown\">\n): Promise<Item> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readwrite\");\n  const store = transaction.objectStore(\"dictionary\");\n\n  const id = (await store.add(item)) as number;\n\n  await transaction.complete;\n\n  return { ...item, id };\n}\n\nexport async function addItems(\n  dbPromise: Promise<DB>,\n  items: (Pick<Item, \"word\" | \"description\" | \"isKnown\"> &\n    Partial<Pick<Item, \"id\">>)[]\n): Promise<string[]> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readwrite\");\n  const store = transaction.objectStore(\"dictionary\");\n\n  const ids = (await Promise.all(\n    items.map(item => {\n      if (item.id != null) {\n        return store.put(item);\n      } else {\n        return store.add(item);\n      }\n    })\n  )) as string[];\n\n  await transaction.complete;\n\n  return ids;\n}\n\nexport async function updateItem(\n  dbPromise: Promise<DB>,\n  {\n    isKnown,\n    description,\n    word,\n    id,\n  }: Partial<Pick<Item, \"word\" | \"description\" | \"isKnown\">> & Pick<Item, \"id\">\n): Promise<Item> {\n  const db = await dbPromise;\n  let transaction = db.transaction(\"dictionary\", \"readonly\");\n  let store = transaction.objectStore(\"dictionary\");\n  const item: Item = await store.get(id);\n  await transaction.complete;\n\n  if (typeof isKnown === \"boolean\") {\n    item.isKnown = isKnown;\n  }\n\n  if (typeof description === \"string\") {\n    item.description = description;\n  }\n\n  if (typeof word === \"string\") {\n    item.word = word;\n  }\n\n  transaction = db.transaction(\"dictionary\", \"readwrite\");\n  store = transaction.objectStore(\"dictionary\");\n  await store.put(item);\n  await transaction.complete;\n\n  return item;\n}\n\nexport async function getItem(\n  dbPromise: Promise<DB>,\n  { id }: Pick<Item, \"id\">\n): Promise<Item | null> {\n  const db = await dbPromise;\n  let transaction = db.transaction(\"dictionary\", \"readonly\");\n  let store = transaction.objectStore(\"dictionary\");\n  const item: Item = await store.get(id);\n  await transaction.complete;\n\n  return item;\n}\n\nexport async function getAllItems(dbPromise: Promise<DB>): Promise<Item[]> {\n  const db = await dbPromise;\n  let transaction = db.transaction(\"dictionary\", \"readonly\");\n  let store = transaction.objectStore(\"dictionary\");\n  const items: Item[] = await store.getAll();\n  await transaction.complete;\n\n  return items;\n}\n\nexport async function getNextItem(\n  dbPromise: Promise<DB>,\n  { id }: Pick<Item, \"id\">\n): Promise<Item | null> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readonly\");\n  const store = transaction.objectStore(\"dictionary\");\n  let cursor = await store.openCursor(IDBKeyRange.lowerBound(id, true));\n  if (!cursor) {\n    cursor = await store.openCursor(IDBKeyRange.upperBound(id));\n  }\n\n  if (!cursor) {\n    return null;\n  }\n\n  const item: Item = cursor.value;\n\n  await transaction.complete;\n\n  return item;\n}\n\nexport async function getItems(\n  dbPromise: Promise<DB>,\n  { word, id }: Partial<Pick<Item, \"id\" | \"word\">>\n): Promise<Item[]> {\n  const db = await dbPromise;\n\n  const searchResult: Item[] = [];\n\n  if (id != null) {\n    const searchByKey = await db\n      .transaction(\"dictionary\", \"readonly\")\n      .objectStore(\"dictionary\")\n      .get(id);\n\n    if (searchByKey) {\n      searchResult.push(searchByKey);\n    }\n  }\n\n  if (word != null) {\n    searchResult.push(\n      ...(await db\n        .transaction(\"dictionary\", \"readonly\")\n        .objectStore(\"dictionary\")\n        .index(\"word\")\n        .getAll(IDBKeyRange.bound(word, `${word}zzz`), 25))\n    );\n  }\n\n  return searchResult;\n}\n\nexport async function deleteItem(\n  dbPromise: Promise<DB>,\n  { id }: Pick<Item, \"id\">\n): Promise<void> {\n  const db = await dbPromise;\n  const transaction = db.transaction(\"dictionary\", \"readwrite\");\n  const store = transaction.objectStore(\"dictionary\");\n\n  await store.delete(id);\n  await transaction.complete;\n}\n\nexport async function getTotal(dbPromise: Promise<DB>) {\n  const db = await dbPromise;\n\n  return db\n    .transaction(\"dictionary\", \"readonly\")\n    .objectStore(\"dictionary\")\n    .count();\n}\n","import { AppState } from \"./AppState\";\n\nconst KEY = \"appState\";\n\nexport function saveToLocalStore(state: AppState) {\n  localStorage.setItem(KEY, JSON.stringify(state));\n}\n\nexport function loadFromLocalStore(): AppState | null {\n  const savedState = localStorage.getItem(KEY);\n  if (savedState != null) {\n    return JSON.parse(savedState);\n  }\n\n  return null;\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport { AppAction, ActionType, AppState, Item } from \"./AppState\";\nimport {\n  addItem,\n  addItems,\n  deleteItem,\n  getDB,\n  getItem,\n  getItems,\n  getNextItem,\n  updateItem,\n  getAllItems,\n  getTotal,\n} from \"./idb\";\nimport { loadFromLocalStore, saveToLocalStore } from \"./localStore\";\nimport { saveAs } from \"file-saver\";\n\nexport type SearchAction = (search: { search: string }) => void;\n\nexport type AddAction = (\n  item: Pick<Item, \"word\"> & Partial<Pick<Item, \"description\" | \"isKnown\">>\n) => void;\n\nexport type UploadAction = (\n  items: (Pick<Item, \"word\"> &\n    Partial<Pick<Item, \"description\" | \"isKnown\" | \"id\">>)[]\n) => void;\n\nexport type EditAction = (\n  item: Pick<Item, \"id\"> &\n    Partial<Pick<Item, \"isKnown\" | \"description\" | \"word\">>\n) => void;\n\nexport type NextAction = (item: Pick<Item, \"id\">) => void;\n\nexport type SelectAction = (item: Pick<Item, \"id\">) => void;\n\nexport type DeleteAction = (item: Pick<Item, \"id\">) => void;\n\nexport type DownloadAction = () => void;\n\nexport function useAppActions(\n  state: AppState,\n  dispatch: AppAction\n): {\n  searchAction: SearchAction;\n  addAction: AddAction;\n  uploadAction: UploadAction;\n  editAction: EditAction;\n  nextAction: NextAction;\n  selectAction: SelectAction;\n  deleteAction: DeleteAction;\n  downloadAction: DownloadAction;\n} {\n  const [dbPromise] = useState(getDB);\n\n  useEffect(() => {\n    const savedState = loadFromLocalStore();\n    if (savedState != null) {\n      dispatch({\n        type: ActionType.INIT,\n        payload: { state: savedState },\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    saveToLocalStore(state);\n  }, [state]);\n\n  const addAction: AddAction = useCallback(\n    async ({\n      word,\n      description = \"\",\n      isKnown = false,\n    }: Pick<Item, \"word\"> & Partial<Pick<Item, \"description\" | \"isKnown\">>) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const item = await addItem(dbPromise, { word, isKnown, description });\n      const total = await getTotal(dbPromise);\n\n      dispatch({ type: ActionType.ITEM, payload: { item } });\n      dispatch({ type: ActionType.SEARCH, payload: { search: \"\" } });\n      dispatch({\n        type: ActionType.SEARCH_RESULT,\n        payload: { searchResult: [] },\n      });\n      dispatch({ type: ActionType.STATISTIC, payload: { total } });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const uploadAction: UploadAction = useCallback(\n    async (\n      items: (Pick<Item, \"word\"> &\n        Partial<Pick<Item, \"description\" | \"isKnown\">>)[]\n    ) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      await addItems(\n        dbPromise,\n        items.map(({ word, description, isKnown }) => ({\n          word,\n          description: description || \"\",\n          isKnown: isKnown != null ? isKnown : false,\n        }))\n      );\n      const total = await getTotal(dbPromise);\n\n      dispatch({ type: ActionType.STATISTIC, payload: { total } });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const downloadAction: DownloadAction = useCallback(async () => {\n    dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n    const items = await getAllItems(dbPromise);\n    const blob = new File([JSON.stringify(items)], \"dictionary.json\", {\n      type: \"application/json\",\n    });\n\n    saveAs(blob, \"dictionary.json\");\n\n    dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n  }, [dbPromise]);\n\n  const editAction: EditAction = useCallback(\n    async ({\n      isKnown,\n      description,\n      word,\n      id,\n    }: Pick<Item, \"id\"> &\n      Partial<Pick<Item, \"isKnown\" | \"description\" | \"word\">>) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const item = await updateItem(dbPromise, {\n        isKnown,\n        description,\n        id,\n        word,\n      });\n\n      dispatch({ type: ActionType.ITEM, payload: { item } });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const nextAction: NextAction = useCallback(\n    async ({ id }: Pick<Item, \"id\">) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const item = await getNextItem(dbPromise, { id });\n\n      if (item != null) {\n        dispatch({ type: ActionType.ITEM, payload: { item } });\n      }\n\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const searchAction: SearchAction = useCallback(\n    async ({ search }: { search: string }) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n      dispatch({ type: ActionType.SEARCH, payload: { search } });\n      dispatch({ type: ActionType.ITEM, payload: {} });\n\n      let word;\n      let id;\n\n      if (search[0] === \"#\") {\n        const tmpId = Number.parseInt(search.slice(1), 10);\n        if (!Number.isNaN(tmpId)) {\n          id = tmpId;\n        }\n      } else {\n        word = search;\n      }\n\n      const searchResult = await getItems(dbPromise, { word, id });\n\n      dispatch({ type: ActionType.SEARCH_RESULT, payload: { searchResult } });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const selectAction: SelectAction = useCallback(\n    async ({ id }: Pick<Item, \"id\">) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      const item = await getItem(dbPromise, { id });\n\n      if (item != null) {\n        dispatch({ type: ActionType.ITEM, payload: { item } });\n      }\n\n      dispatch({ type: ActionType.SEARCH, payload: { search: \"\" } });\n      dispatch({\n        type: ActionType.SEARCH_RESULT,\n        payload: { searchResult: [] },\n      });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  const deleteAction: DeleteAction = useCallback(\n    async ({ id }: Pick<Item, \"id\">) => {\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: true } });\n\n      await deleteItem(dbPromise, { id });\n      const item = (await getNextItem(dbPromise, { id })) || undefined;\n      const total = await getTotal(dbPromise);\n\n      dispatch({ type: ActionType.STATISTIC, payload: { total } });\n      dispatch({ type: ActionType.ITEM, payload: { item } });\n      dispatch({ type: ActionType.LOADING, payload: { isLoading: false } });\n    },\n    [dbPromise]\n  );\n\n  return {\n    searchAction,\n    addAction,\n    editAction,\n    nextAction,\n    selectAction,\n    deleteAction,\n    uploadAction,\n    downloadAction,\n  };\n}\n","import React, { useCallback, useRef } from \"react\";\nimport {\n  Container,\n  Form,\n  InputGroup,\n  Button,\n  Card,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n} from \"react-bootstrap\";\nimport {\n  AddAction,\n  DeleteAction,\n  DownloadAction,\n  EditAction,\n  UploadAction,\n  NextAction,\n  SearchAction,\n  SelectAction,\n  useAppActions,\n} from \"./AppActions\";\nimport { useAppState, AppState, AppStatistic } from \"./AppState\";\n\nfunction Header(\n  props: Pick<AppState, \"search\"> & {\n    onAdd: AddAction;\n    onLoad: UploadAction;\n    onSearch: SearchAction;\n    onDownload: DownloadAction;\n  }\n) {\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  const handleFiles = useCallback(() => {\n    if (fileInput.current == null) {\n      return;\n    }\n\n    const files = fileInput.current.files;\n    if (files == null) {\n      return;\n    }\n\n    const file = files.item(0);\n    if (file == null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (typeof reader.result === \"string\") {\n        props.onLoad(JSON.parse(reader.result));\n      }\n    };\n\n    reader.readAsText(file);\n  }, [fileInput]);\n\n  const handleLoad = () => {\n    if (fileInput.current != null) {\n      fileInput.current.click();\n    }\n  };\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        if (props.search.length > 0) {\n          props.onAdd({ word: props.search });\n        }\n      }}\n    >\n      <input\n        ref={fileInput}\n        type=\"file\"\n        accept=\"application/json\"\n        className=\"d-none\"\n        onChange={handleFiles}\n      />\n      <InputGroup className=\"mt-3 mb-3\">\n        <Form.Control\n          value={props.search}\n          size=\"lg\"\n          placeholder=\"Search or add new word\"\n          // @ts-ignore\n          onChange={(e: Event) => {\n            if (e.target instanceof HTMLInputElement) {\n              const search = e.target.value;\n\n              props.onSearch({ search });\n            }\n          }}\n        />\n        <InputGroup.Append>\n          <Button size=\"lg\" type=\"submit\" variant=\"outline-secondary\">\n            add\n          </Button>\n        </InputGroup.Append>\n        <DropdownButton\n          as={InputGroup.Append}\n          variant=\"outline-secondary\"\n          alignRight\n          title=\"\"\n          size=\"lg\"\n          id=\"app-header-options\"\n        >\n          <Dropdown.Item href=\"#\" onClick={handleLoad}>\n            Upload words\n          </Dropdown.Item>\n          <Dropdown.Item href=\"#\" onClick={props.onDownload}>\n            Download words\n          </Dropdown.Item>\n        </DropdownButton>\n      </InputGroup>\n    </form>\n  );\n}\n\nfunction SearchResult(\n  props: Pick<AppState, \"search\" | \"searchResult\"> & {\n    onSelect: SelectAction;\n  }\n) {\n  return (\n    <React.Fragment>\n      {props.searchResult.map(item => (\n        <Card\n          key={item.id}\n          className={`mt-3 mb-3 ${item.isKnown ? \"border-success\" : \"\"}`}\n        >\n          <Card.Header>Card #{item.id}</Card.Header>\n          <Card.Body>\n            <Card.Title>{item.word}</Card.Title>\n            {item.description !== \"\" ? (\n              <Card.Text>{item.description}</Card.Text>\n            ) : (\n              false\n            )}\n            <Card.Link\n              href=\"#\"\n              // @ts-ignore\n              onClick={(e: Event) => {\n                e.stopPropagation();\n                props.onSelect({ id: item.id });\n              }}\n            >\n              select\n            </Card.Link>\n          </Card.Body>\n        </Card>\n      ))}\n      {props.searchResult.length === 0 && props.search.length > 0\n        ? \"No results\"\n        : false}\n    </React.Fragment>\n  );\n}\n\nfunction ItemView(\n  props: Pick<AppState, \"item\"> & {\n    onChange: EditAction;\n    onNext: NextAction;\n    onDelete: DeleteAction;\n  }\n) {\n  const item = props.item;\n\n  if (item == null) {\n    return null;\n  }\n\n  return (\n    <Card className=\"mt-3 mb-3\">\n      <Card.Header>Card #{item.id}</Card.Header>\n      <Card.Body>\n        <Card.Title>{item.word}</Card.Title>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"2\"\n          size=\"lg\"\n          value={item.description}\n          // @ts-ignore\n          onChange={(e: Event) => {\n            const description =\n              e.target instanceof HTMLTextAreaElement\n                ? e.target.value\n                : item.description;\n            props.onChange({ id: item.id, description });\n          }}\n        />\n      </Card.Body>\n      <Card.Footer>\n        <ButtonGroup className=\"w-100\">\n          <Button\n            variant={item.isKnown ? \"success\" : \"primary\"}\n            size=\"lg\"\n            onClick={() => {\n              props.onChange({\n                id: item.id,\n                isKnown: !item.isKnown,\n              });\n            }}\n          >\n            I know\n          </Button>\n          <Button\n            variant=\"secondary\"\n            size=\"lg\"\n            onClick={() => {\n              props.onNext({ id: item.id });\n            }}\n          >\n            Next\n          </Button>\n          <DropdownButton\n            alignRight\n            as={ButtonGroup}\n            title=\"\"\n            size=\"lg\"\n            variant=\"secondary\"\n            id=\"card-options\"\n          >\n            <Dropdown.Item\n              eventKey=\"1\"\n              onClick={() => {\n                props.onDelete({ id: item.id });\n              }}\n            >\n              delete\n            </Dropdown.Item>\n          </DropdownButton>\n        </ButtonGroup>\n      </Card.Footer>\n    </Card>\n  );\n}\n\nfunction Statistic(props: { statistic: AppStatistic }) {\n  return (\n    <ul>\n      <li>Total: {props.statistic.total}</li>\n    </ul>\n  );\n}\n\nfunction App() {\n  const [state, dispatch] = useAppState();\n  const {\n    searchAction,\n    addAction,\n    selectAction,\n    editAction,\n    nextAction,\n    deleteAction,\n    uploadAction,\n    downloadAction,\n  } = useAppActions(state, dispatch);\n\n  return (\n    <Container>\n      <Header\n        search={state.search}\n        onSearch={searchAction}\n        onAdd={addAction}\n        onLoad={uploadAction}\n        onDownload={downloadAction}\n      />\n      <SearchResult\n        searchResult={state.searchResult}\n        search={state.search}\n        onSelect={selectAction}\n      />\n      <ItemView\n        item={state.item}\n        onChange={editAction}\n        onNext={nextAction}\n        onDelete={deleteAction}\n      />\n      <Statistic statistic={state.statistic} />\n      <span style={{ display: state.isLoading ? \"block\" : \"none\" }}>\n        loading ...\n      </span>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  if (!navigator.onLine) {\n    return;\n  }\n\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  if (!navigator.onLine) {\n    return;\n  }\n\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}